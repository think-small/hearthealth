// <auto-generated />
using System;
using HeartHealth.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HeartHealth.Infrastructure.Migrations
{
    [DbContext(typeof(HeartHealthDbContext))]
    partial class HeartHealthDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HeartHealth.Domain.Entities.Measurement", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("smalldatetime");

                    b.HasKey("Id");

                    b.ToTable("Measurements");
                });

            modelBuilder.Entity("HeartHealth.Domain.Entities.Measurement", b =>
                {
                    b.OwnsOne("HeartHealth.Domain.ValueObjects.BloodPressure", "BloodPressure", b1 =>
                        {
                            b1.Property<string>("MeasurementId")
                                .HasColumnType("varchar(36)");

                            b1.Property<int>("Diastolic")
                                .HasColumnType("int")
                                .HasColumnName("Diastolic");

                            b1.Property<int>("Systolic")
                                .HasColumnType("int")
                                .HasColumnName("Systolic");

                            b1.HasKey("MeasurementId");

                            b1.ToTable("Measurements");

                            b1.WithOwner()
                                .HasForeignKey("MeasurementId");
                        });

                    b.Navigation("BloodPressure")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
